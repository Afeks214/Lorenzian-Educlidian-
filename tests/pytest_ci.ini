[tool:pytest]
# CI/CD Optimized pytest configuration for GrandModel
# Optimized for fast feedback and minimal resource usage

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# CI-specific optimizations
addopts = 
    --strict-markers
    --strict-config
    --tb=line
    --maxfail=1
    --timeout=120
    --timeout-method=thread
    --disable-warnings
    --durations=10
    --durations-min=0.1
    --quiet
    --no-header
    --no-summary
    --ignore=venv
    --ignore=.venv
    --ignore=build
    --ignore=dist
    --ignore=.git
    --ignore=__pycache__
    --ignore=.pytest_cache
    --ignore=logs
    --ignore=htmlcov
    
    --cov=src
    --cov-report=xml:coverage.xml
    --cov-report=term:skip-covered
    --cov-branch
    --cov-fail-under=80
    
# Parallel execution (CI environment)
    -n auto
    --dist=loadgroup
    --maxprocesses=4

# Test markers (CI priority order)
markers =
    smoke: Critical smoke tests (highest priority)
    unit: Unit tests (fast, isolated)
    integration: Integration tests (medium priority)
    performance: Performance tests (lower priority)
    slow: Slow tests (lowest priority)
    ci: CI-specific tests
    
# CI-specific configuration
asyncio_mode = auto
log_cli = false
xfail_strict = true

# Fast failure for CI
junit_family = xunit2
junit_suite_name = GrandModel-CI
junit_duration_report = total
junit_log_passing_tests = false

# Warning filters (strict for CI)
filterwarnings =
    error::DeprecationWarning
    error::PendingDeprecationWarning
    ignore::UserWarning:torch.*
    ignore::UserWarning:tensorflow.*

# Collection optimization for CI
collect_ignore = 
    setup.py
    venv
    .venv
    build
    dist
    .git
    __pycache__
    .pytest_cache
    colab/notebooks/archive_backup
    adversarial_tests/extreme_data
    adversarial_tests/malicious_configs
    models/artifacts
    logs
    htmlcov
    tests/chaos_engineering
    tests/massive_scale
    tests/formal_verification

# Resource limits for CI
memory_profiler = false
cache_dir = .pytest_cache
session_timeout = 900  # 15 minutes max for CI
test_timeout = 120     # 2 minutes per test max

# Test execution order for CI (fastest first)
test_order = 
    smoke
    unit
    integration
    performance