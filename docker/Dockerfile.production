# Multi-stage production Dockerfile for Strategic MARL 30m System
# Optimized for security, size, and performance

# Build stage 1: Dependencies
FROM python:3.12-slim as dependencies

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Copy dependency files
COPY requirements.txt .
COPY requirements-prod.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir -r requirements-prod.txt

# Build stage 2: Application
FROM python:3.12-slim as builder

# Copy installed packages from dependencies stage
COPY --from=dependencies /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=dependencies /usr/local/bin /usr/local/bin

# Set working directory
WORKDIR /app

# Copy application code
COPY src/ ./src/
COPY configs/ ./configs/
COPY scripts/ ./scripts/

# Compile Python files for performance
RUN python -m compileall -b src/

# Remove .py files, keep only .pyc
RUN find src/ -name "*.py" -type f -delete

# Final stage: Minimal runtime
FROM gcr.io/distroless/python3-debian12:nonroot

# Build arguments for versioning
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION

# Labels for container metadata
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.title="GrandModel Strategic MARL" \
      org.opencontainers.image.description="Production-ready Strategic MARL 30m System" \
      org.opencontainers.image.url="https://github.com/Afeks214/GrandModel" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.vendor="QuantNova" \
      org.opencontainers.image.licenses="MIT"

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONHASHSEED=random \
    PYTHONIOENCODING=utf-8 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Copy Python runtime and packages
COPY --from=builder /usr/local/lib/python3.12 /usr/local/lib/python3.12
COPY --from=builder /usr/local/bin/python3.12 /usr/local/bin/python3.12

# Copy application
COPY --from=builder --chown=nonroot:nonroot /app /app

# Set working directory
WORKDIR /app

# Create necessary directories with correct permissions
USER root
RUN mkdir -p /app/logs /app/data /app/models && \
    chown -R nonroot:nonroot /app/logs /app/data /app/models
USER nonroot

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python3.12 -c "import urllib.request; urllib.request.urlopen('http://localhost:8000/health').read()"

# Expose port
EXPOSE 8000

# Security: Run as non-root user (already set by distroless)
# The nonroot user has UID 65532

# Entry point
ENTRYPOINT ["python3.12", "-m", "uvicorn", "src.api.main:app"]
CMD ["--host", "0.0.0.0", "--port", "8000", "--workers", "4", "--loop", "uvloop", "--access-log", "--log-config", "/app/configs/logging.yaml"]