# GrandModel Horizontal Pod Autoscalers - Agent 5 Production Scaling
# Strategic MARL HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: strategic-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: strategic
    managed-by: agent5
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: strategic-deployment
  minReplicas: 2
  maxReplicas: 8
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metric: Request rate
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "30"
  # Custom metric: Inference latency
  - type: Pods
    pods:
      metric:
        name: inference_latency_p99_ms
      target:
        type: AverageValue
        averageValue: "2"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max

---
# Tactical MARL HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tactical-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: tactical
    managed-by: agent5
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tactical-deployment
  minReplicas: 3
  maxReplicas: 12
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metric: Request rate (higher for tactical due to frequency)
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "50"
  # Custom metric: Inference latency
  - type: Pods
    pods:
      metric:
        name: inference_latency_p99_ms
      target:
        type: AverageValue
        averageValue: "2"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 30
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 3
        periodSeconds: 15
      selectPolicy: Max

---
# Risk Management HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: risk-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: risk
    managed-by: agent5
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-deployment
  minReplicas: 2
  maxReplicas: 6
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 75
  # Custom metric: VaR calculation frequency
  - type: Pods
    pods:
      metric:
        name: var_calculations_per_second
      target:
        type: AverageValue
        averageValue: "10"
  # Custom metric: Risk assessment latency
  - type: Pods
    pods:
      metric:
        name: risk_assessment_latency_ms
      target:
        type: AverageValue
        averageValue: "1"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 1
        periodSeconds: 30
      selectPolicy: Max

---
# NGINX Gateway HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gateway-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: gateway
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-gateway
  minReplicas: 2
  maxReplicas: 6
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  # Custom metric: Connection count
  - type: Pods
    pods:
      metric:
        name: nginx_connections_active
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15

---
# Vertical Pod Autoscaler for fine-tuning resources
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: strategic-vpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: strategic
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: strategic-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: strategic-agent
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 1Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits

---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: tactical-vpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: tactical
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tactical-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: tactical-agent
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 1Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits

---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: risk-vpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: risk
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: risk-agent
      minAllowed:
        cpu: 50m
        memory: 64Mi
      maxAllowed:
        cpu: 500m
        memory: 512Mi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits