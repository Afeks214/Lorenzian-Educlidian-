# GrandModel Production HPA Configuration - Agent 20 Implementation
# Enterprise-grade auto-scaling with comprehensive metrics and behaviors

---
# Strategic Agent HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: strategic-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: strategic
    managed-by: agent20
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: strategic-deployment
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: strategic_latency_p95
      target:
        type: AverageValue
        averageValue: "2m"
  - type: Pods
    pods:
      metric:
        name: strategic_throughput_rps
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

---
# Tactical Agent HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tactical-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: tactical
    managed-by: agent20
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tactical-deployment
  minReplicas: 5
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: Pods
    pods:
      metric:
        name: tactical_latency_p95
      target:
        type: AverageValue
        averageValue: "1m"
  - type: Pods
    pods:
      metric:
        name: tactical_throughput_rps
      target:
        type: AverageValue
        averageValue: "200"
  - type: Pods
    pods:
      metric:
        name: tactical_queue_depth
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 3
        periodSeconds: 30
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

---
# Risk Management Agent HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: risk-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: risk
    managed-by: agent20
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-deployment
  minReplicas: 3
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 60
  - type: Pods
    pods:
      metric:
        name: risk_var_calculation_time
      target:
        type: AverageValue
        averageValue: "5m"
  - type: Pods
    pods:
      metric:
        name: risk_correlation_updates_per_sec
      target:
        type: AverageValue
        averageValue: "50"
  - type: Pods
    pods:
      metric:
        name: risk_alert_processing_time
      target:
        type: AverageValue
        averageValue: "1m"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Min

---
# Data Pipeline HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: data-pipeline-hpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: data-pipeline
    managed-by: agent20
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: data-pipeline-deployment
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: data_pipeline_messages_per_sec
      target:
        type: AverageValue
        averageValue: "1000"
  - type: Pods
    pods:
      metric:
        name: data_pipeline_lag_seconds
      target:
        type: AverageValue
        averageValue: "5"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      selectPolicy: Min

---
# Vertical Pod Autoscaler for Strategic Agent
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: strategic-vpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: strategic
    managed-by: agent20
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: strategic-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: strategic-agent
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 4000m
        memory: 4Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits

---
# Vertical Pod Autoscaler for Risk Agent
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: risk-vpa
  namespace: grandmodel
  labels:
    app: grandmodel
    component: risk
    managed-by: agent20
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-deployment
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: risk-agent
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 1000m
        memory: 2Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits